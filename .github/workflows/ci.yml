name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  id-token: write

env:
  DOCKER_REPO: randytreit/respondr

jobs:
  test-backend:
    name: Backend tests (uv)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Create virtual environment (.venv) with uv
        run: |
          uv venv .venv

      - name: Install backend deps with uv
        shell: bash
        run: |
          source .venv/bin/activate
          uv pip install -r backend/requirements.txt

      - name: Run tests
        shell: bash
        env:
          WEBHOOK_API_KEY: test-key
        run: |
          source .venv/bin/activate
          cd backend
          python run_tests.py

  test-frontend:
    name: Frontend tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Run tests
        working-directory: frontend
        run: npm test -- --watchAll=false --ci

  build-and-push:
    name: Build and push Docker image to Docker Hub
    needs: [test-backend, test-frontend]
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Generate version tags
        id: tags
        run: |
          # Generate tags for CI builds
          COMMIT_SHA="${{ github.sha }}"
          DATE_TAG="ci-$(date -u +"%Y%m%d")"
          
          TAGS="${{ env.DOCKER_REPO }}:latest"
          TAGS="${TAGS},${{ env.DOCKER_REPO }}:${COMMIT_SHA:0:8}"
          TAGS="${TAGS},${{ env.DOCKER_REPO }}:${DATE_TAG}"
          
          echo "TAGS=${TAGS}" >> $GITHUB_OUTPUT
          echo "Generated tags: ${TAGS}"
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.tags.outputs.TAGS }}
          cache-from: type=registry,ref=${{ env.DOCKER_REPO }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_REPO }}:buildcache,mode=max
      
      - name: Summary
        run: |
          echo "## 🐳 Docker Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Repository**: \`${{ env.DOCKER_REPO }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Tags**: " >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.tags.outputs.TAGS }}" | sed 's/,/\n/g' | sed 's/^/- `/' | sed 's/$/`/' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Commit**: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
