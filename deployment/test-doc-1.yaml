apiVersion: apps/v1
kind: Deployment
metadata:
  name: respondr-deployment
  namespace: respondr
  labels:
    app: respondr
spec:
  replicas: 2
  selector:
    matchLabels:
      app: respondr
  template:
    metadata:
      labels:
        app: respondr
        azure.workload.identity/use: "true"  # Required for workload identity
    spec:
      serviceAccountName: respondr-sa
      containers:
      # Main application container
      - name: respondr
        image: respondrdqeunumstnsbmacr.azurecr.io/respondr:latest
        ports:
        - containerPort: 8000
        env:
        - name: AZURE_OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: respondr-secrets
              key: AZURE_OPENAI_API_KEY
        - name: AZURE_OPENAI_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: respondr-secrets
              key: AZURE_OPENAI_ENDPOINT
        - name: AZURE_OPENAI_DEPLOYMENT
          valueFrom:
            secretKeyRef:
              name: respondr-secrets
              key: AZURE_OPENAI_DEPLOYMENT
        - name: AZURE_OPENAI_API_VERSION
          valueFrom:
            secretKeyRef:
              name: respondr-secrets
              key: AZURE_OPENAI_API_VERSION
        - name: WEBHOOK_API_KEY
          valueFrom:
            secretKeyRef:
              name: respondr-secrets
              key: WEBHOOK_API_KEY
        - name: REDIS_HOST
          value: redis-service
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_DB
          value: "0"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/responders
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/responders
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        imagePullPolicy: IfNotPresent

      # OAuth2 Proxy sidecar container (conditional - will be removed if ENABLE_OAUTH2=false)
      
      - name: oauth2-proxy
        image: quay.io/oauth2-proxy/oauth2-proxy:v7.5.1
        ports:
        - containerPort: 4180
        args:
        - --provider=oidc
        - --provider-display-name="Microsoft Entra"
        - --oidc-issuer-url=https://login.microsoftonline.com/d62aea99-b83c-45cb-919b-81127225d94a/v2.0
        - --redirect-url=https://respondr.paincave.pro/oauth2/callback
        - --email-domain=*
        - --upstream=http://localhost:8000
        - --http-address=0.0.0.0:4180
        - --cookie-secure=true
        - --cookie-httponly=true
        - --cookie-samesite=lax
        - --cookie-expire=24h
        - --skip-provider-button=true
        - --pass-access-token=true
        - --pass-user-headers=true
        - --set-xauthrequest=true
        - --silence-ping-logging=true
        - --skip-auth-regex=^/webhook$
        - --skip-auth-regex=^/health$
        - --whitelist-domain=respondr.paincave.pro
        env:
        - name: OAUTH2_PROXY_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: oauth2-secrets
              key: client-id
        - name: OAUTH2_PROXY_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth2-secrets
              key: client-secret
        - name: OAUTH2_PROXY_COOKIE_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth2-secrets
              key: cookie-secret
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /ping
            port: 4180
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ping
            port: 4180
          initialDelaySeconds: 5
          periodSeconds: 5
        imagePullPolicy: IfNotPresent
      


