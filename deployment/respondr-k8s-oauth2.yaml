apiVersion: apps/v1
kind: Deployment
metadata:
  name: respondr-deployment
  namespace: respondr
  labels:
    app: respondr
spec:
  replicas: 2
  selector:
    matchLabels:
      app: respondr
  template:
    metadata:
      labels:
        app: respondr
        azure.workload.identity/use: "true"  # Required for workload identity
    spec:
      serviceAccountName: respondr-sa
      containers:
      # Main application container
      - name: respondr
        image: respondrbt774d4d55kswacr.azurecr.io/respondr:latest
        ports:
        - containerPort: 8000
        env:
        - name: AZURE_OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: respondr-secrets
              key: AZURE_OPENAI_API_KEY
        - name: AZURE_OPENAI_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: respondr-secrets
              key: AZURE_OPENAI_ENDPOINT
        - name: AZURE_OPENAI_DEPLOYMENT
          valueFrom:
            secretKeyRef:
              name: respondr-secrets
              key: AZURE_OPENAI_DEPLOYMENT
        - name: AZURE_OPENAI_API_VERSION
          valueFrom:
            secretKeyRef:
              name: respondr-secrets
              key: AZURE_OPENAI_API_VERSION
        - name: WEBHOOK_API_KEY
          valueFrom:
            secretKeyRef:
              name: respondr-secrets
              key: WEBHOOK_API_KEY
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/responders
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/responders
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        imagePullPolicy: IfNotPresent

      # OAuth2 Proxy sidecar container (conditional - will be removed if ENABLE_OAUTH2=false)

      - name: oauth2-proxy
        image: quay.io/oauth2-proxy/oauth2-proxy:v7.5.1
        ports:
        - containerPort: 4180
        args:
        - --provider=oidc
        - --provider-display-name="Microsoft Entra"
        - --oidc-issuer-url=https://login.microsoftonline.com/5c2d2c3d-ce9f-47f8-85f5-0f0fb30c218d/v2.0
        - --redirect-url=https://respondr.paincave.pro/oauth2/callback
        - --email-domain=*
        - --upstream=http://localhost:8000
        - --http-address=0.0.0.0:4180
        - --cookie-secure=true
        - --cookie-httponly=true
        - --cookie-samesite=lax
        - --cookie-expire=24h
        - --skip-provider-button=true
        - --pass-access-token=true
        - --pass-user-headers=true
        - --set-xauthrequest=true
        - --silence-ping-logging=true
        - --skip-auth-regex=^/webhook$
        - --skip-auth-regex=^/health$
        env:
        - name: OAUTH2_PROXY_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: oauth2-secrets
              key: client-id
        - name: OAUTH2_PROXY_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth2-secrets
              key: client-secret
        - name: OAUTH2_PROXY_COOKIE_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth2-secrets
              key: cookie-secret
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /ping
            port: 4180
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ping
            port: 4180
          initialDelaySeconds: 5
          periodSeconds: 5
        imagePullPolicy: IfNotPresent


---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: respondr-sa
  namespace: respondr
  annotations:
    azure.workload.identity/client-id: 40aab722-19f0-4a60-a07f-d4041f856927
    azure.workload.identity/tenant-id: 5c2d2c3d-ce9f-47f8-85f5-0f0fb30c218d

---
apiVersion: v1
kind: Service
metadata:
  name: respondr-service
  namespace: respondr
  labels:
    app: respondr
spec:
  type: ClusterIP
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800  # 3 hours
  ports:
  # Port configuration changes based on OAuth2 mode
  - port: 80
    protocol: TCP
    targetPort: 4180
  selector:
    app: respondr

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: respondr-ingress
  namespace: respondr
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway
    appgw.ingress.kubernetes.io/ssl-redirect: "true"
    appgw.ingress.kubernetes.io/use-private-ip: "false"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    acme.cert-manager.io/http01-edit-in-place: "true"
    # Session affinity for Application Gateway
    appgw.ingress.kubernetes.io/cookie-based-affinity: "true"
    appgw.ingress.kubernetes.io/backend-protocol: "http"
spec:
  tls:
  - hosts:
    - respondr.paincave.pro
    secretName: respondr-tls-letsencrypt
  rules:
  - host: respondr.paincave.pro
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: respondr-service
            port:
              number: 80

